{"version":3,"sources":["helpers/picChange.js","helpers/getHTML.js","helpers/lazyImagesLoader.js","helpers/mapHintsMaker.js","index.js"],"names":["addThumbnailsPicChanger","doc","getElementById","forEach","shown","thumbnails","getElementsByClassName","i","length","addEventListener","e","prev","classList","remove","target","add","style","backgroundImage","window","getComputedStyle","getPropertyValue","addPointsPicChanger","container","points","className","getAttribute","addNumsPicChanger","cadrsContainer","cadrNumsContainer","nums","prevCadr","addCountPicChanger","cadrsContainers","cadrCountContainers","j","chosen","amountElement","amount","parseInt","innerHTML","curNumber","nextNumber","getHTML","url","callbackFn","XMLHttpRequest","xhr","onload","responseXML","open","responseType","send","lazyLoadImages","lazyBackgrounds","slice","call","querySelectorAll","lazyBackgroundObserver","IntersectionObserver","entries","entry","isIntersecting","unobserve","lazyBackground","observe","locations","room15","room16","room13","room12","room14","room11","room27","room26","room24","room25","room17","room22","room23","room21","room80","room78","room79","room74","room72","room73","room69","room75","room70","room71","room67","room68","room81","room65","room66","room02","room01","room18","room19","room20","room10","room07","room06","room05","room03","room09","room08","room35","room37","room36","room39","room38","room40","room42","room41","room64","room63","room76","room59","room58","room57","room56","room55","room54","room53","room52","room51","room50","room49","room48","room47","room46","room45","room44","room43","room61","room60","room62","room33","room28","room34","room32","room29","room30","room31","room04","makeHintLines","roomName","locName","texts","split","unshift","longestLineLength","needCut","t","lines","text","index","line","document","createElement","p","appendChild","cut","push","makeMapHints","response","content","querySelector","map","Object","keys","roomID","room","hint","onmouseover","roomRectParams","getBoundingClientRect","left","x","width","top","y","height","opacity","onmouseout","pageNames","linkTitles","main","institute","participants","digital","sources","contents","defaultView","frameElement","getVisiblePageName","test","location","href","exec","loadingPageName","pages","links","linksBar","burger","closer","sharing","clearVisibiles","pageName","showLinksBar","removeEventListener","link","setTimeout","hideLinksBar","vpn","changePage","oldPageName","history","pushState","oldPage","newPage","contentWindow","pN","tl","progress","contains","loadPageContent","page","animElem","body","getElementsByTagName","scroll","sessionStorage","getItem","documentElement","scrollLeft","releasePageNames","src","includes","awkwardLink","stopPropagation","linkWatchNowEn","setAttribute","linkWatchNowRu"],"mappings":"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","file":"dau.cb59cda6.js","sourceRoot":"..","sourcesContent":["export const addThumbnailsPicChanger = (doc) => {\n  const showns = [doc.getElementById(\"alina\"), doc.getElementById(\"vika\")]\n\n  showns.forEach((shown) => {\n    const thumbnails = shown.getElementsByClassName(\"imgContainer\")\n    for (var i = 0; i < thumbnails.length; i++) {\n      thumbnails[i].addEventListener(\"click\", (e) => {\n        const prev = shown.getElementsByClassName(\"selected\")\n        if (prev.length > 0) prev[0].classList.remove(\"selected\")\n        e.target.classList.add(\"selected\")\n        shown.style.backgroundImage = window.\n          getComputedStyle(e.target.getElementsByClassName(\"img\")[0]).\n          getPropertyValue(\"background-image\")\n      })\n    }\n  })\n}\n\nexport const addPointsPicChanger = (doc) => {\n  const containers = [\n    doc.getElementById(\"nora\"),\n    doc.getElementById(\"vika2\"),\n  ]\n  containers.forEach((container) => {\n    const shown = container.getElementsByClassName(\"shown\")\n    const points = container.getElementsByClassName(\"clickableArea\")\n    for (var i = 0; i < points.length; i++) {\n      points[i].addEventListener(\"click\", (e) => {\n        const prev = container.getElementsByClassName(\"selected\")\n        if (prev.length > 0) prev[0].classList.remove(\"selected\")\n        e.target.classList.add(\"selected\")\n        shown[0].className = `img shown selected_${e.target.getAttribute(\"data-id\")}`\n      })\n    }\n  })\n}\n\nexport const addNumsPicChanger = (doc) => {\n  const cadrsContainer = doc.getElementById(\"cadrsContainer\")\n  const cadrNumsContainer = doc.getElementById(\"cadrNumsContainer\")\n  const nums = cadrNumsContainer.getElementsByClassName(\"cadrNum\")\n  for (let i = 0; i < nums.length; i++) {\n    nums[i].addEventListener(\"click\", (e) => {\n      const prev = cadrNumsContainer.getElementsByClassName(\"chosen\")\n      if (prev.length > 0) prev[0].classList.remove(\"chosen\")\n      e.target.classList.add(\"chosen\")\n      const prevCadr = cadrsContainer.getElementsByClassName(\"visible\")\n      if (prevCadr.length > 0) prevCadr[0].classList.remove(\"visible\")\n      cadrsContainer.getElementsByClassName(`cadr${i + 1}`)[0].classList.add(\"visible\")\n    })\n  }\n}\n\nexport const addCountPicChanger = (doc) => {\n  const cadrsContainers = doc.getElementsByClassName(\"cadrsContainer\")\n  const cadrCountContainers = doc.getElementsByClassName(\"cadrCountContainer\")\n  for (let j = 0; j < cadrsContainers.length; j++) {\n    const chosen = cadrCountContainers[j].getElementsByClassName(\"chosen\")[0]\n    const amountElement = cadrCountContainers[j].getElementsByClassName(\"amount\")[0]\n    const amount = parseInt(amountElement.innerHTML, 10)\n\n    const changeCadrByClick = () => {\n      if (chosen) {\n        const curNumber = parseInt(chosen.innerHTML, 10)\n        const nextNumber = curNumber === amount ? 1 : curNumber + 1\n        chosen.innerHTML = nextNumber\n        const prevCadr = cadrsContainers[j].getElementsByClassName(\"visible\")\n        if (prevCadr.length > 0) prevCadr[0].classList.remove(\"visible\")\n        cadrsContainers[j].getElementsByClassName(`cadr${nextNumber}`)[0].classList.add(\"visible\")\n      }\n    }\n\n    cadrsContainers[j].addEventListener(\"click\", changeCadrByClick, false)\n  }\n}\n","export const getHTML = (url, callbackFn) => {\n  // Feature detection\n  if (!window.XMLHttpRequest) return\n\n  // Create new request\n  var xhr = new XMLHttpRequest()\n\n  // Setup callbackFn\n  xhr.onload = function() {\n    if (callbackFn && typeof callbackFn === \"function\") {\n      callbackFn(this.responseXML)\n    }\n  }\n\n  // Get the HTML\n  xhr.open(\"GET\", url)\n  xhr.responseType = \"document\"\n  xhr.send()\n}\n","export const lazyLoadImages = (doc) => {\n  var lazyBackgrounds = [].slice.call(doc.querySelectorAll(\".lazy\"));\n  if (\"IntersectionObserver\" in window) {\n    const lazyBackgroundObserver = new IntersectionObserver(function(entries) {\n      entries.forEach(function(entry) {\n        if (entry.isIntersecting) {\n          entry.target.classList.add(\"loaded\");\n          entry.target.classList.remove(\"lazy\");\n          lazyBackgroundObserver.unobserve(entry.target);\n        }\n      });\n    });\n\n    lazyBackgrounds.forEach(function(lazyBackground) {\n      lazyBackgroundObserver.observe(lazyBackground);\n    });\n  }\n}\n","import {getHTML} from './getHTML'\n\nconst locations = {\n  \"D1 - 1st level\": {\n    room15: \"Room 1 (1938-68)\",\n    room16: \"Bathroom (1938-68)\",\n    room13: \"WC (1938-68)\",\n    room12: \"Stairs (1938-68)\",\n    room14: \"Hall (1938-68)\",\n    room11: \"Living room (1938-68)\",\n    room27: \"Kitchen (1938-68)\",\n  },\n  \"D2 - 1st level\": {\n    room26: \"Kitchen (1938-68)\",\n    room24: \"Bathroom (1938-68)\",\n    room25: \"WC (1938-68)\",\n    room17: \"Living room (1938-68)\",\n    room22: \"Stairs (1938-68)\",\n    room23: \"Hall (1938-68)\",\n    room21: \"Guest's room (1938-68)\",\n  },\n  \"D1 - 2nd level\": {\n    room80: \"Room 29 (1966-1968)\",\n    room78: \"Room 27 (1966-1968)\",\n    room79: \"Corridor (1966-1968)\",\n    room74: \"Room 26 (1938-1968)\",\n    room72: \"Room 25 (1938-1968)\",\n    room73: \"Room 24 (1938-1968)\",\n    room69: \"Balcony (1938-1968)\",\n    room75: \"Stairs (1938-1968)\",\n    room70: \"Room 23 (1938-1968)\",\n    room71: \"Room 22 (1938-1968)\",\n  },\n  \"D2 - 2nd level\": {\n    room67: \"Bedroom 1 — Dau's room\\n(1938-1968)\",\n    room68: \"Bedroom 2 — Nora's room\\n(1938-1968)\",\n    room81: \"Stairs (1938-68)\",\n    room65: \"Pass (1938-1968)\",\n    room66: \"Brattery — Denis's room\\n(1938-1968)\",\n    room02: \"Balcony (1938-1968)\",\n  },\n  \"1st level\": {\n    room01: \"Back gate\",\n    room18: \"Main gate\",\n    room19: \"Garages\",\n    room20: \"Garages\",\n    room10: \"Corridor of Cafe\",\n    room07: \"Smoking room\",\n    room06: \"Toilet (gents)\",\n    room05: \"Toilet (ladies)\",\n    room03: \"Café\",\n    room09: \"Place for braizer\",\n    room08: \"Kitchen\",\n    room35: \"Big  Corridor\",\n    room37: \"Stairs to Pigsty\",\n    room36: \"Pigsty\",\n    room39: \"Room for cleaning stuff 2\",\n    room38: \"Room for cleaning staff 1\",\n    room40: \"Big Laboratory\",\n    room42:\n      'Personnel department (1938-52)\\nSpecial department (1952-56)\\nEditing office of a newspaper \"Izvestiya Instituta\" (1956-68)',\n    room41: \"Personnel department (1938-52)\\nSpecial department (1952-56)\\nParty nucleus (1956-68) \",\n    room64: \"Corridor of main entrance\",\n    room63: \"Guard's room\",\n    room76: \"Cashdesk\",\n  },\n  \"2nd level\": {\n    room59: \"Theoretical department\",\n    room58: \"Stairs to Special Office (1956-68)\",\n    room57: \"Corridor of Special Office (1956-68)\",\n    room56: \"Medical Office (1956-68)\",\n    room55: \"Special Office (1956-68)\",\n    room54: \"Atelier (1956-68)\",\n    room53: \"Reception of hairdresser\",\n    room52: \"Hairdresser\",\n    room51: \"Massage place\",\n    room50: \"Small Laboratory\",\n    room49: \"Corridor of Small lab\",\n    room48: \"Photolab\",\n    room47: \"Biophysic's lab 2 (plants)\",\n    room46: \"Biophysic's lab 1 (animals)\",\n    room45: \"Small Corridor of Small Lab\",\n    room44: \"Library\",\n    room43: \"Entrance to Director's Office \",\n  },\n  \"3rd level\": {\n    room61: \"Director's office\",\n    room60: \"Columns pass\",\n    room62: \"Roof\",\n  },\n  \"Prison - 1st level\": {\n    room33: \"Investigation Office\",\n    room28: \"Stairs to Prison\",\n    room34: \"Prison cell 1\",\n    room32: \"Corridor of prison\",\n    room29: \"Prison cell 2\",\n    room30: \"Prison cell 3\",\n    room31: \"Prison cell 4\",\n  },\n  \"\": {\n    room04: \"Cafe's porch\",\n  },\n}\n\nconst makeHintLines = (roomName, locName) => {\n  const texts = roomName.split('\\n')\n  if (locName) texts.unshift(locName)\n  let longestLineLength = texts[0].length\n  let needCut = false\n  texts.forEach((t) => {\n    if (t.length !== longestLineLength) needCut = true\n    if (t.length > longestLineLength) longestLineLength = t.length\n  })\n\n  const lines = []\n\n  texts.forEach((text, index) => {\n    const line = document.createElement('div')\n    line.classList.add('line')\n    const p = document.createElement('p')\n    p.innerHTML = text\n    line.appendChild(p)\n    if (texts[index - 1]) {\n      if (texts[index - 1].length - text.length > 0) line.classList.add('longerOver')\n      else if (texts[index - 1].length - text.length < 0) line.classList.add('shorterOver')\n      else line.classList.add('equalOver')\n    }\n    if (texts[index + 1]) {\n      if (texts[index + 1].length - text.length > 0) line.classList.add('longerBelow')\n      else if (texts[index + 1].length - text.length < 0) line.classList.add('shorterBelow')\n      else line.classList.add('equalBelow')\n    }\n    if (needCut && text.length !== longestLineLength) {\n      const cut = document.createElement('div')\n      cut.classList.add('cut')\n      line.classList.add('withCut')\n      line.appendChild(cut)\n    }\n    lines.push(line);\n  })\n  return lines;\n}\n\nexport const makeMapHints = (doc) => {\n  const container = doc.getElementById(\"mapContainer\")\n  getHTML('pages/institute/assets/inst_map.svg', function (response) {\n    const content = response.querySelector('svg');\n    if (content) {\n      container.appendChild(content)\n      const map = container.querySelector('svg')\n      Object.keys(locations).forEach((locName) => {\n        for (const [roomID, roomName] of Object.entries(locations[locName])) {\n          const room = map.getElementsByClassName(roomID)[0]\n          const hint = document.createElement('div')\n          hint.classList.add('hint')\n          makeHintLines(roomName, locName).forEach((line) => hint.appendChild(line));\n          room.onmouseover = () => {\n            const roomRectParams = room.getBoundingClientRect()\n            hint.style.left = `${roomRectParams.x + roomRectParams.width}px`\n            hint.style.top = `${roomRectParams.y + roomRectParams.height}px`\n            hint.style.opacity = 1\n          }\n          room.onmouseout = () => hint.style.opacity = 0\n          container.appendChild(hint)\n        }\n      })\n    }\n  });\n}\n","// import { addCountPicChanger, addNumsPicChanger, addPointsPicChanger, addThumbnailsPicChanger } from \"./helpers/picChange\";\nimport { addNumsPicChanger, addPointsPicChanger, addThumbnailsPicChanger } from \"./helpers/picChange\";\n// import { addVertScroll } from \"./helpers/vertScroll\";\nimport {getHTML} from './helpers/getHTML'\nimport { lazyLoadImages } from \"./helpers/lazyImagesLoader\";\nimport { makeMapHints } from \"./helpers/mapHintsMaker\";\n\nconst pageNames = [\"main\", \"institute\", \"participants\", \"digital\"]\nconst linkTitles = {\n  main: \"DAU\",\n  institute: \"The Institute\",\n  participants: \"Participants\",\n  digital: \"DAU&nbsp;&nbsp;&nbsp;DIGITAL&nbsp;&nbsp;(coming soon)\",\n}\nconst sources = {\n  main: \"pages/main/main.html\",\n  digital: \"/\",\n  participants: \"pages/participants/index.html\",\n  institute: \"pages/institute/index.html\",\n  // about: \"pages/about/about.html\",\n}\nconst contents = {\n  main: \"pages/main/main.html\",\n  digital: \"\",\n  participants: \"pages/participants/participants.html\",\n  institute: \"pages/institute/institute.html\",\n  // about: \"pages/about/about.html\",\n}\n\ndocument.addEventListener(\n  \"DOMContentLoaded\",\n  (e) => {\n    // console.log(e)\n    if (e.target.defaultView.frameElement) return\n\n    const getVisiblePageName = () => (/#(.+)/.test(window.location.href) ? /#(.+)/.exec(window.location.href)[1] : 'main')\n\n    const loadingPageName = /#(.+)/.test(window.location.href) ? /#(.+)/.exec(window.location.href)[1] : \"\"\n    const pages = {}\n    const links = {}\n\n    const linksBar = document.getElementById('linksBar')\n    const burger = document.getElementById('burger')\n    const closer = burger.getElementsByClassName('closer')[0]\n    const sharing = linksBar.getElementsByClassName('sharing')[0]\n    const clearVisibiles = () => Object.keys(pages).forEach((pageName) => (pages[pageName].classList.remove('visible')))\n\n    const showLinksBar = () => {\n      // const linksBar = document.getElementById('linksBar')\n      // const burger = document.getElementById('burger')\n      burger.removeEventListener('click', showLinksBar)\n      Object.entries(links).forEach(([,link]) => link.classList.remove('visible', 'clickable', 'chosen'))\n      linksBar.classList.remove('folded')\n      linksBar.classList.add('expanded')\n      clearVisibiles()\n      setTimeout(() => {\n        Object.entries(links).forEach(([,link]) => link.classList.add('visible', 'clickable'))\n        sharing.classList.add('visible', 'clickable')\n        burger.classList.add('closeable')\n        closer.addEventListener('click', hideLinksBar)\n      }, 1000);\n    }\n\n    const hideLinksBar = () => {\n      linksBar.classList.remove('expanded')\n      linksBar.classList.add('above', 'folded')\n      Object.entries(links).forEach(([,link]) => link.classList.remove('visible', 'clickable'))\n      sharing.classList.remove('visible', 'clickable')\n      closer.removeEventListener('click', hideLinksBar)\n      burger.classList.remove('closeable')\n      const vpn = getVisiblePageName()\n      pages[vpn].classList.add(\"visible\", \"withTransition\")\n      setTimeout(() => {\n        links[vpn].classList.add(\"chosen\", \"visible\")\n        burger.classList.add('clickable')\n        burger.addEventListener('click', showLinksBar)\n      }, 1000);\n    }\n\n    const changePage = (pageName, oldPageName) => {\n      window.history.pushState(pageName, pageName, pageName === \"main\" ? \" \" : `#${pageName}`)\n      clearVisibiles()\n      const oldPage = pages[oldPageName]\n      const newPage = pages[pageName]\n      newPage.classList.add(\"visible\", \"withTransition\")\n      // Object.keys(pages).forEach((pageName) => (pages[pageName].classList.remove('when_main', 'when_institute', 'when_participants', 'when_about')))\n      Object.keys(pages).forEach((pageName) => (pages[pageName].classList.remove('when_main', 'when_institute', 'when_participants')))\n      Object.keys(pages).forEach((pageName) => (pages[pageName].classList.add(`when_${getVisiblePageName()}`)))\n      if (oldPageName) oldPage.classList.add(\"withTransition\")\n      hideLinksBar()\n      burger.classList.add('clicked')\n      if (pageName === \"main\") {\n        pages.main.contentWindow.document.getElementById('linesContainer').classList.add('shown')\n        const lines = pages.main.contentWindow.document.getElementById('lines')\n        lines.style.width = \"\"\n        lines.style.height = \"\"\n      }\n      setTimeout(() => {\n        Object.keys(links).forEach((pN) => {\n          if (pN === pageName) links[pN].classList.add(\"chosen\", \"visible\")\n          else links[pN].classList.add(\"clickable\")\n        })\n        // links[pageName].classList.add('chosen', 'visible')\n        linksBar.classList.remove('above')\n        burger.classList.add('clickable')\n        burger.addEventListener('click', showLinksBar)\n        Object.keys(pages).forEach((pageName) => (pages[pageName].classList.remove('withTransition')))\n        if (oldPageName && oldPageName === \"main\") pages.main.contentWindow.document.getElementById('linesContainer').classList.remove('shown', 'withTransition')\n        if (oldPageName) pages.main.contentWindow.document.tl.progress(1, false);\n      }, 600);\n      if (oldPageName && oldPageName === \"main\") pages.main.contentWindow.document.getElementById('linesContainer').classList.remove('withTransition')\n      if (!newPage.classList.contains('loaded')) {\n        loadPageContent(pageName)\n      }\n      // switch (pageName) {\n      //   case 'main':\n      //     addVertScroll(pages.main, pages.about, changePage)\n      //     pages.main.contentWindow.document.getElementById('link_watch_now').addEventListener(\"click\", openAbout)\n      //     break;\n      //   case 'about':\n      //     if (oldPageName) {\n      //       lazyLoadImages(newPage.contentWindow.document)\n      //       addCountPicChanger(newPage.contentWindow.document)\n      //     } else pages.about.onload = () => {\n      //       lazyLoadImages(newPage.contentWindow.document)\n      //       addCountPicChanger(newPage.contentWindow.document)\n      //     }\n      //     break;\n      //   default:\n      //     break;\n      // }\n    }\n\n    const loadPageContent = (pageName) => {\n      // console.log(pages[pageName].contentWindow.document)\n      const page = pages[pageName]\n      const animElem = page.contentWindow.document.getElementsByClassName('screensaver')[0]\n      if (animElem) animElem.classList.add('animated')\n      let content = ''\n      getHTML(contents[pageName], function (response) {\n        content = response.getElementById('scrollContainer');\n        if (content) {\n          const body = page.contentWindow.document.getElementsByTagName('body')[0]\n          body.appendChild(content)\n          body.classList.add('loaded')\n          page.classList.add('loaded')\n          if (pageName === 'participants') {\n            const scroll = sessionStorage.getItem('scroll_participants')\n            addThumbnailsPicChanger(page.contentWindow.document)\n            addPointsPicChanger(page.contentWindow.document)\n            lazyLoadImages(page.contentWindow.document)\n            if (scroll) {\n              page.contentWindow.document.documentElement.scrollLeft = parseInt(scroll, 0)\n              page.contentWindow.document.body.scrollLeft = parseInt(scroll, 0)\n            }\n          } else if (pageName === \"institute\") {\n            const scroll = sessionStorage.getItem('scroll_institute')\n            if (scroll) {\n              page.contentWindow.document.documentElement.scrollLeft = parseInt(scroll, 0)\n              page.contentWindow.document.body.scrollLeft = parseInt(scroll, 0)\n            }\n            addNumsPicChanger(page.contentWindow.document)\n            makeMapHints(page.contentWindow.document)\n            lazyLoadImages(page.contentWindow.document)\n          }\n          // } else if (pageName === \"about\") {\n          //   // lazyLoadImages(page.contentWindow.document)\n          //   addCountPicChanger(page.contentWindow.document)\n          // }\n        }\n      });\n    }\n\n    // const openAbout = () => {\n    //   const oldPageName = getVisiblePageName()\n    //   changePage('about', oldPageName)\n    // }\n\n    const releasePageNames = [\"main\", \"participants\", \"institute\"]\n\n    releasePageNames.forEach((pageName) => {\n      const page = document.createElement(\"iframe\")\n      page.classList.add(pageName)\n      // if (pageName === \"main\") {\n      //   page.classList.add('visible')\n      // }\n      page.style.width = \"100%\"\n      page.style.height = \"100%\"\n      document.body.appendChild(page)\n      pages[pageName] = page\n      page.src = sources[pageName]\n      if (loadingPageName === \"\" && pageName === \"main\") {\n        page.classList.add('visible')\n      } else if (loadingPageName === pageName) {\n        clearVisibiles()\n        setTimeout(() => {\n          // loadPageContent(pageName)\n          // lazyLoadImages(page.contentWindow.document)\n          // addCountPicChanger(page.contentWindow.document)\n          changePage(pageName, null)\n          page.classList.add(\"loaded\", \"visible\")\n        }, 300);\n      }\n    })\n\n    pageNames.forEach((pageName) => {\n      const link = document.createElement(\"span\")\n      link.classList.add('link', pageName)\n      link.innerHTML = linkTitles[pageName]\n      document.getElementById('linksBar').appendChild(link)\n      links[pageName] = link\n      if (releasePageNames.includes(pageName)) link.addEventListener(\"click\", () => {\n        const oldPageName = getVisiblePageName()\n        changePage(pageName, oldPageName)\n      })\n      else link.classList.add('disabled')\n    })\n\n    const awkwardLink = document.createElement('a')\n    awkwardLink.innerHTML = 'ONLINE CINEMA'\n    awkwardLink.href = './cinema'\n    awkwardLink.addEventListener(\"click\", (e) => {\n      e.stopPropagation();\n      window.location.href = \"./cinema\"\n    })\n    // links.about = awkwardLink\n    links.main.appendChild(awkwardLink)\n\n    // const burger = document.getElementById('burger')\n    if (loadingPageName === '') {\n      pages.main.onload = () => {\n        if (burger) burger.classList.add('shown')\n        Object.entries(links).forEach(([pageName,link]) => (pageName !== 'main') && link.classList.add('visible', 'clickable'))\n        // links.about.classList.add('clickable')\n        sharing.classList.add('visible', 'clickable')\n        // console.log('pages.main.contentWindow.document.getElementById(\"linesContainer\")', pages.main.contentWindow.document.getElementById(\"linesContainer\"));\n        pages.main.contentWindow.document.getElementById('linesContainer').classList.add('shown')\n        const linkWatchNowEn = pages.main.contentWindow.document.getElementById('watch_now_en')\n        linkWatchNowEn.setAttribute('href', '../../cinema')\n        linkWatchNowEn.addEventListener('click', () => window.location.href += \"cinema\")\n        const linkWatchNowRu = pages.main.contentWindow.document.getElementById('watch_now_ru')\n        linkWatchNowRu.setAttribute('href', '../../cinema')\n        linkWatchNowRu.addEventListener('click', () => window.location.href += \"cinema\")\n        setTimeout(() => {\n          pages.main.contentWindow.document.getElementById('linesContainer').classList.remove('withTransition')\n          // pages.main.contentWindow.document.getElementById('link_watch_now').addEventListener(\"click\", openAbout)\n          // addVertScroll(pages.main, pages.about, changePage)\n        }, 850);\n      }\n    } else {\n      document.getElementById('linksBar').classList.add('folded')\n      if (burger) burger.classList.add('clicked')\n      setTimeout(() => {\n        burger.classList.add('shown', 'clickable')\n        burger.addEventListener('click', showLinksBar)\n        links[loadingPageName].classList.add('visible', 'chosen')\n        links.main.classList.add('clickable')\n        const linkWatchNowEn = pages.main.contentWindow.document.getElementById('watch_now_en')\n        linkWatchNowEn.setAttribute('href', '../../cinema')\n        linkWatchNowEn.addEventListener('click', () => window.location.href += \"cinema\")\n        const linkWatchNowRu = pages.main.contentWindow.document.getElementById('watch_now_ru')\n        linkWatchNowRu.setAttribute('href', '../../cinema')\n        linkWatchNowRu.addEventListener('click', () => window.location.href += \"cinema\")\n      }, 1000);\n    }\n  },\n  true,\n)\n"]}